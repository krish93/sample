/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mhr;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.*;
import javax.swing.JOptionPane;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Elcot
 */
public class MhrStandard extends javax.swing.JFrame {

    /**
     * Creates new form MhrStandard
     * 
     */
    int index=0;
    
      //LINE ITEM
    String specs_val,machinename_val,type_name,make_val;
    String dir = System.getProperty("user.dir");
    
    int type_val=0;
    //INVESTMENT
    int machine_cost_val=0,total_machine_cost_val=0,other_cost=0,machine_cost_considered=0,disposal_val=0,machine_life_val=0,machine_cost_year_val=0;
    double installation_cost_val=0;
    
    //WORKING DAYS
    int week_hols_val=54,national_hols_val=10,no_of_shifts_val=3,capacity_eff_val=85;
    int work_days_year_val=365-(week_hols_val+national_hols_val);
    double work_hour_year_val=no_of_shifts_val*work_days_year_val*7.5;
    double temp_capacity_eff_val=0.85;
    double temp_machine_uptime_val=temp_capacity_eff_val*work_hour_year_val;
    int machine_uptime_val=(int)(temp_machine_uptime_val+0.5);
    
    
    //INTEREST CHARGES
    int maintanance_val=0,consumables_val=0;
    int roi_val=12,loan_val=100,interest_val=0;
    double temp_roi=((double)roi_val/100);
    double temp_loan=((double)loan_val/100);
    
    //POWER CHARGES
    int kwh_val=0;
    double eb_rate_val=0,dg_rate_val=0,eb_val=0,dg_val=0,temp_dg_percent_val=0;
    double consumption_val=0,eb_percent_val=0,dg_percent_val=0;
    int power_charges_year_val=0,others_cost_val=0,air_cost_val=0;
    int others_val=0,air_val=0,others_qty_val=0,air_qty_val=0;
    
    //SPACECOST
    double sqm_val=215.2;
    int width_val=0,len_val=0,area_val=0;
    int space_cost_year_val=0;
    
    //LABOUR COST
    int operators_val=33,salary_month_1_val=15000,temp_utilisation_1_val=100,supervisor_val=3,salary_month_2_val=30000,temp_utilisation_2_val=10,cost_year_val=0;
    double utilisation_2_val=0,utilisation_1_val=0;
    //MHRFINAL
    int fix_val=0,var_val=0;
    double mhr_val=0,mmr_val=0;

    
        
    
    boolean save=false,report_completed=false;
    boolean name_status=false,type_status=false,specs_status=false,make_status=false,category_status=false;
   
    
    public MhrStandard() {
        initComponents();
        //installation_cost.setEnabled(false);
        //System.out.println("ret value = " + i);
       // operators.setEnabled(false);
     //   this.getContentPane().setBackground(Color.BLACK);
        report.setEnabled(false);
        add.setEnabled(false);
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        machinename = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        specs = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        make = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        installation_cost = new javax.swing.JFormattedTextField();
        other = new javax.swing.JFormattedTextField();
        machine_cost = new javax.swing.JFormattedTextField();
        total_machine_cost = new javax.swing.JFormattedTextField();
        disposal = new javax.swing.JFormattedTextField();
        machine_considered = new javax.swing.JFormattedTextField();
        machine_cost_year = new javax.swing.JFormattedTextField();
        machine_life = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        machine_uptime = new javax.swing.JFormattedTextField();
        capacity_eff = new javax.swing.JFormattedTextField();
        work_hour_year = new javax.swing.JFormattedTextField();
        no_of_shifts = new javax.swing.JFormattedTextField();
        work_days_year = new javax.swing.JFormattedTextField();
        national_hols = new javax.swing.JFormattedTextField();
        week_hols = new javax.swing.JFormattedTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        maintanance = new javax.swing.JFormattedTextField();
        consumables = new javax.swing.JFormattedTextField();
        interest = new javax.swing.JFormattedTextField();
        loan = new javax.swing.JFormattedTextField();
        roi = new javax.swing.JFormattedTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        kwh = new javax.swing.JFormattedTextField();
        eb_percent = new javax.swing.JFormattedTextField();
        jLabel32 = new javax.swing.JLabel();
        eb_rate = new javax.swing.JFormattedTextField();
        jLabel33 = new javax.swing.JLabel();
        dg_percent = new javax.swing.JFormattedTextField();
        jLabel34 = new javax.swing.JLabel();
        dg_rate = new javax.swing.JFormattedTextField();
        jLabel35 = new javax.swing.JLabel();
        consume = new javax.swing.JFormattedTextField();
        jLabel36 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        len = new javax.swing.JFormattedTextField();
        width = new javax.swing.JFormattedTextField();
        jLabel41 = new javax.swing.JLabel();
        area = new javax.swing.JFormattedTextField();
        jLabel42 = new javax.swing.JLabel();
        sqm = new javax.swing.JFormattedTextField();
        Space_cost_year = new javax.swing.JLabel();
        space_cost_year = new javax.swing.JFormattedTextField();
        jLabel43 = new javax.swing.JLabel();
        power_charges_year = new javax.swing.JFormattedTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        fix = new javax.swing.JFormattedTextField();
        jLabel46 = new javax.swing.JLabel();
        var = new javax.swing.JFormattedTextField();
        jLabel47 = new javax.swing.JLabel();
        mhr = new javax.swing.JFormattedTextField();
        jLabel48 = new javax.swing.JLabel();
        mmr = new javax.swing.JFormattedTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        operators = new javax.swing.JFormattedTextField();
        jLabel51 = new javax.swing.JLabel();
        salary_month_1 = new javax.swing.JFormattedTextField();
        jLabel52 = new javax.swing.JLabel();
        utilisation_1 = new javax.swing.JFormattedTextField();
        jLabel53 = new javax.swing.JLabel();
        supervisor = new javax.swing.JFormattedTextField();
        jLabel54 = new javax.swing.JLabel();
        salary_month_2 = new javax.swing.JFormattedTextField();
        jLabel55 = new javax.swing.JLabel();
        utilisation_2 = new javax.swing.JFormattedTextField();
        jLabel56 = new javax.swing.JLabel();
        cost_year = new javax.swing.JFormattedTextField();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        installation_percentage = new javax.swing.JFormattedTextField();
        disposal_percentage = new javax.swing.JFormattedTextField();
        maintanence_percentage = new javax.swing.JFormattedTextField();
        consumable_percentage = new javax.swing.JFormattedTextField();
        jLabel57 = new javax.swing.JLabel();
        category = new javax.swing.JComboBox();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        report = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        others = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel64 = new javax.swing.JLabel();
        other_qty = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        others_cost = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel66 = new javax.swing.JLabel();
        air = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        air_qty = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        air_cost = new javax.swing.JTextField();
        jSeparator12 = new javax.swing.JSeparator();
        specific_report = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Machine Name");

        machinename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                machinenameKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Type");

        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose", "Automatic", "Manual", "Assembly" }));
        type.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeItemStateChanged(evt);
            }
        });
        type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                typeKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Specification");

        specs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                specsKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Make");

        make.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                makeKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("MHR CALCULATOR");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("INVESTMENT");

        jLabel7.setText("Machine Cost   (a)");

        jLabel8.setText("Installation Cost ");

        jLabel9.setText("Other Cost");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Total Machine Cost");

        jLabel11.setText("Machine Life");

        jLabel12.setText("Disposal Value ");

        jLabel13.setText("Machine cost to");

        jLabel14.setText("be concidered");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Machine Cost/year");

        installation_cost.setEditable(false);
        installation_cost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##00;(¤#,##0.00)"))));
        installation_cost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                installation_costKeyReleased(evt);
            }
        });

        other.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));
        other.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                otherKeyReleased(evt);
            }
        });

        machine_cost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));
        machine_cost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                machine_costKeyReleased(evt);
            }
        });

        total_machine_cost.setEditable(false);
        total_machine_cost.setBackground(new java.awt.Color(255, 255, 255));
        total_machine_cost.setForeground(new java.awt.Color(255, 0, 0));
        total_machine_cost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));
        total_machine_cost.setSelectionColor(new java.awt.Color(248, 78, 9));

        disposal.setEditable(false);
        disposal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));
        disposal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                disposalKeyReleased(evt);
            }
        });

        machine_considered.setEditable(false);
        machine_considered.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));
        machine_considered.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                machine_consideredKeyReleased(evt);
            }
        });

        machine_cost_year.setEditable(false);
        machine_cost_year.setBackground(new java.awt.Color(212, 210, 210));
        machine_cost_year.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        machine_life.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                machine_lifeKeyReleased(evt);
            }
        });

        jLabel16.setText("Weekly Holidays");

        jLabel17.setText("National Holidays");

        jLabel18.setText("Working days/year");

        jLabel19.setText("No. of shifts/day");

        jLabel20.setText("Working hours/year");

        jLabel21.setText("Capacity efficiency (%)");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Machine uptime/year");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("WORKING DAYS");

        machine_uptime.setEditable(false);
        machine_uptime.setBackground(new java.awt.Color(208, 205, 205));

        capacity_eff.setEditable(false);
        capacity_eff.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                capacity_effKeyReleased(evt);
            }
        });

        work_hour_year.setEditable(false);

        no_of_shifts.setEditable(false);
        no_of_shifts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                no_of_shiftsKeyReleased(evt);
            }
        });

        work_days_year.setEditable(false);

        national_hols.setEditable(false);
        national_hols.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                national_holsKeyReleased(evt);
            }
        });

        week_hols.setEditable(false);
        week_hols.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                week_holsKeyReleased(evt);
            }
        });

        jLabel24.setText("Rate Of Interest ( % )");

        jLabel25.setText("Loan ( % )");

        jLabel26.setText("Interest Cost");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("Maintanance ");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("consumables ");

        maintanance.setEditable(false);
        maintanance.setForeground(new java.awt.Color(255, 0, 0));
        maintanance.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        consumables.setEditable(false);
        consumables.setForeground(new java.awt.Color(255, 0, 0));
        consumables.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        interest.setEditable(false);
        interest.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        loan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loanKeyReleased(evt);
            }
        });

        roi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                roiKeyReleased(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setText("INTEREST CHARGES");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel30.setText("1.Electricity (KWH)");

        jLabel31.setText("EB (%)");

        kwh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kwhKeyReleased(evt);
            }
        });

        eb_percent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                eb_percentKeyReleased(evt);
            }
        });

        jLabel32.setText("& EB Rate");

        eb_rate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                eb_rateKeyReleased(evt);
            }
        });

        jLabel33.setText("DG (%)");

        dg_percent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dg_percentKeyReleased(evt);
            }
        });

        jLabel34.setText("& DG Rate");

        dg_rate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dg_rateKeyReleased(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setText("Power Consumption");

        consume.setEditable(false);
        consume.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));
        consume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumeActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText("POWER CHARGES");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel37.setText("SPACE COST");

        jLabel38.setText("Machine Working Area");

        jLabel39.setText("Length");

        jLabel40.setText("Width");

        len.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lenKeyReleased(evt);
            }
        });

        width.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                widthKeyReleased(evt);
            }
        });

        jLabel41.setText("Area");

        area.setEditable(false);
        area.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        jLabel42.setText("Space Cost/sq.m");

        sqm.setEditable(false);
        sqm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sqmKeyReleased(evt);
            }
        });

        Space_cost_year.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Space_cost_year.setText("Space Cost/year");

        space_cost_year.setEditable(false);
        space_cost_year.setBackground(new java.awt.Color(217, 215, 215));
        space_cost_year.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel43.setText("Power Charges/year :");

        power_charges_year.setEditable(false);
        power_charges_year.setBackground(new java.awt.Color(204, 200, 200));
        power_charges_year.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel44.setText("MHR");

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(153, 0, 0));
        jLabel45.setText("FIX");

        fix.setEditable(false);
        fix.setBackground(new java.awt.Color(212, 210, 210));
        fix.setForeground(new java.awt.Color(255, 0, 0));
        fix.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(153, 0, 0));
        jLabel46.setText("VAR");

        var.setEditable(false);
        var.setBackground(new java.awt.Color(212, 210, 210));
        var.setForeground(new java.awt.Color(255, 0, 0));
        var.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(153, 0, 0));
        jLabel47.setText("MHR");

        mhr.setEditable(false);
        mhr.setBackground(new java.awt.Color(212, 210, 210));
        mhr.setForeground(new java.awt.Color(255, 0, 0));
        mhr.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(153, 0, 0));
        jLabel48.setText("MMR");

        mmr.setEditable(false);
        mmr.setBackground(new java.awt.Color(212, 210, 210));
        mmr.setForeground(new java.awt.Color(255, 0, 0));
        mmr.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel49.setText("LABOUR COST");

        jLabel50.setText("No. of Operators");

        operators.setEditable(false);
        operators.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                operatorsKeyReleased(evt);
            }
        });

        jLabel51.setText("Salary/Month");

        salary_month_1.setEditable(false);
        salary_month_1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));
        salary_month_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                salary_month_1KeyReleased(evt);
            }
        });

        jLabel52.setText("Utilisation");

        utilisation_1.setEditable(false);
        utilisation_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                utilisation_1KeyReleased(evt);
            }
        });

        jLabel53.setText("No. of supervisors");

        supervisor.setEditable(false);
        supervisor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                supervisorKeyReleased(evt);
            }
        });

        jLabel54.setText("Salary/Month");

        salary_month_2.setEditable(false);
        salary_month_2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));
        salary_month_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                salary_month_2KeyReleased(evt);
            }
        });

        jLabel55.setText("Utilisation");

        utilisation_2.setEditable(false);
        utilisation_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                utilisation_2KeyReleased(evt);
            }
        });

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel56.setText("Cost/year");

        cost_year.setEditable(false);
        cost_year.setBackground(new java.awt.Color(216, 216, 216));
        cost_year.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0;(¤#,##0.00)"))));

        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);

        installation_percentage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                installation_percentageKeyReleased(evt);
            }
        });

        disposal_percentage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                disposal_percentageKeyReleased(evt);
            }
        });

        maintanence_percentage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                maintanence_percentageKeyReleased(evt);
            }
        });

        consumable_percentage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                consumable_percentageKeyReleased(evt);
            }
        });

        jLabel57.setText("% of a");

        category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose", "Standard", "Standard + Labour", "Customize", "Customize+Labour", "For Assembly" }));
        category.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categoryItemStateChanged(evt);
            }
        });

        jLabel58.setText("Category");

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel59.setText("% of b");

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel60.setText("% of b");

        jLabel61.setText("% of a");

        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);

        report.setText("Report Generate");
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel62.setText("( b )");

        jLabel63.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel63.setText("2.Others");

        others.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                othersKeyReleased(evt);
            }
        });

        jLabel64.setText("Qty");

        other_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                other_qtyKeyReleased(evt);
            }
        });

        jLabel65.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel65.setText("Others Cost");

        jLabel66.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel66.setText("3.Air ");

        air.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                airKeyReleased(evt);
            }
        });

        jLabel67.setText("Qty");

        air_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                air_qtyKeyReleased(evt);
            }
        });

        jLabel68.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel68.setText("Air Cost");

        jLabel69.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel69.setText("(cubic metres)");

        specific_report.setText("Report of Speciic Machine");
        specific_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specific_reportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel6)
                                .addGap(244, 244, 244)
                                .addComponent(jLabel23)
                                .addGap(121, 121, 121)
                                .addComponent(jLabel29)
                                .addGap(131, 131, 131)
                                .addComponent(jLabel36)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel44)
                                                .addGap(34, 34, 34)
                                                .addComponent(jLabel45)
                                                .addGap(18, 18, 18)
                                                .addComponent(fix, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel46)
                                                .addGap(11, 11, 11)
                                                .addComponent(var, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(jLabel47)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(mhr, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(22, 22, 22)
                                                .addComponent(jLabel48)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(mmr, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(79, 79, 79))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel8)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(installation_percentage, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jLabel9)
                                                        .addComponent(jLabel11)
                                                        .addComponent(jLabel14)
                                                        .addComponent(jLabel15)
                                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel57, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jLabel61)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel12)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(disposal_percentage, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel10)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel62)))
                                                .addGap(22, 22, 22)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(other, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(installation_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(total_machine_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(machine_life, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(disposal, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(machine_considered, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(machine_cost_year, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(68, 68, 68)
                                                .addComponent(machine_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel18)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(jLabel17)
                                                                .addComponent(jLabel16)))
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addGap(22, 22, 22)
                                                                .addComponent(no_of_shifts, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(34, 34, 34)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(week_hols, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(national_hols, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                                    .addComponent(work_days_year, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(14, 14, 14))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel22)
                                                .addGap(18, 18, 18)
                                                .addComponent(machine_uptime, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel21)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(capacity_eff, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel19)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel20)
                                                            .addGap(34, 34, 34)
                                                            .addComponent(work_hour_year, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel24)
                                                    .addComponent(jLabel25)
                                                    .addComponent(jLabel26))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(interest, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(loan, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(roi, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel59)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel27)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(maintanence_percentage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(maintanance, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel28)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(consumable_percentage, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jLabel60))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(consumables, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel30)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(kwh, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel31)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(eb_percent, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jLabel32)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(eb_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel33)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(dg_percent, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel34)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(dg_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel35)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(consume)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jLabel63)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(others, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addComponent(jLabel65)
                                                                    .addComponent(jLabel66))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jLabel64)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(other_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addComponent(others_cost)))
                                                            .addComponent(jSeparator12)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(power_charges_year, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(jLabel43))
                                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                                .addGap(10, 10, 10)))
                                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSeparator11)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(47, 47, 47)
                                                        .addComponent(air, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel67)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(air_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jLabel69))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel68)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(air_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(14, 14, 14)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSeparator8)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel56)
                                            .addGap(43, 43, 43)
                                            .addComponent(cost_year))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel55)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(utilisation_2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel54)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(salary_month_2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel52)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(utilisation_1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel51)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(salary_month_1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel53)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                            .addComponent(supervisor, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(126, 126, 126))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel42)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(Space_cost_year)
                                                .addComponent(jLabel39)
                                                .addComponent(jLabel40)
                                                .addComponent(jLabel41))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(18, 18, 18)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(width, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(len, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(sqm, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(9, 9, 9)
                                                    .addComponent(space_cost_year, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGap(130, 130, 130)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel37))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel50)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(operators, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(jLabel49))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabel38)))
                                .addGap(0, 0, Short.MAX_VALUE))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jSeparator3)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel58)
                        .addGap(18, 18, 18)
                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(machinename, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(specs, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(make, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(specific_report)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(524, 524, 524)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(126, 126, 126))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(machinename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(specs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(make, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel58)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(report)
                            .addComponent(specific_report))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel23)
                        .addComponent(jLabel29)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel49))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel7))
                            .addComponent(machine_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(week_hols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel24)
                                .addComponent(roi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel50)
                                    .addComponent(operators, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(167, 167, 167)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel11)
                                            .addComponent(machine_life, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(disposal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(disposal_percentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel61)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel14)
                                            .addComponent(machine_considered, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(machine_cost_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(loan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel44)
                                    .addComponent(fix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel45)
                                    .addComponent(var, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel46)
                                    .addComponent(mhr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel47)
                                    .addComponent(mmr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel48))
                                .addGap(8, 8, 8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel51)
                                    .addComponent(salary_month_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel52)
                                    .addComponent(utilisation_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel53)
                                    .addComponent(supervisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel54)
                                    .addComponent(salary_month_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel55)
                                    .addComponent(utilisation_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel56)
                                    .addComponent(cost_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(len, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel39))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel40)
                                    .addComponent(width, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel41)
                                    .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel42)
                                    .addComponent(sqm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(space_cost_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Space_cost_year)))))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(kwh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel8)
                                            .addComponent(installation_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(installation_percentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(national_hols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel17)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel25)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel57)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(3, 3, 3)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(jLabel18)
                                                            .addComponent(work_days_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(11, 11, 11)
                                                        .addComponent(jLabel26))
                                                    .addComponent(interest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(other, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(17, 17, 17)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(total_machine_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel62))
                                            .addComponent(no_of_shifts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addComponent(jLabel9)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel27)
                                        .addComponent(maintanance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(maintanence_percentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(work_hour_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel20))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel21)
                                            .addComponent(capacity_eff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(47, 47, 47)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel22)
                                            .addComponent(machine_uptime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel59)
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(consumables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(consumable_percentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel60))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel31)
                                    .addComponent(eb_percent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32)
                                    .addComponent(eb_rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel33)
                                    .addComponent(dg_percent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel34)
                                    .addComponent(dg_rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35)
                                    .addComponent(consume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel63)
                                    .addComponent(others, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel64)
                                    .addComponent(other_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel65)
                                    .addComponent(others_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel66)
                                    .addComponent(air, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel67)
                                    .addComponent(air_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel69)
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel68)
                                    .addComponent(air_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(power_charges_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void otherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_otherKeyReleased
        // TODO add your handling code here:
      
        
        try
        {
            if(!other.getText().isEmpty())
            {
                other_cost=Integer.parseInt(other.getText());
                total_machine_cost_val=(int)(machine_cost_val+installation_cost_val+other_cost);
                total_machine_cost.setText(total_machine_cost_val+"");
                
                if(index==1 || index==2)
                {
                  machine_cost_considered = (total_machine_cost_val)-(disposal_val);
                  machine_considered.setText(machine_cost_considered+"");
                
                  double temp_interest=temp_roi*temp_loan*total_machine_cost_val;
                  interest_val=(int) temp_interest;
                  interest.setText(interest_val+"");
                }
                
            }
            else
            {
                total_machine_cost_val=(int)(machine_cost_val+installation_cost_val);
                total_machine_cost.setText(total_machine_cost_val+"");
                
                if(index==1 || index==2)
                {
                   machine_cost_considered = (total_machine_cost_val)-(disposal_val);
                
                   machine_considered.setText(machine_cost_considered+"");
                }
                
            }
        }
        catch(Exception e)
        {
                        JOptionPane.showMessageDialog(this,"Enter a digit");

            
        }
        
    }//GEN-LAST:event_otherKeyReleased
    public String removeComma(String str)
    {
        str = str.replaceAll(",", "");
        return str;
    }
    private void machine_costKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_machine_costKeyReleased
        // TODO add your handling code here:
        
        System.out.println("name_status"+name_status);
        System.out.println("type_status = " + type_status);
        System.out.println("make_status = " + make_status);
        System.out.println("specs_status = " + specs_status);
      if(name_status==true && type_status==true && make_status==true && specs_status==true)
      {
          if(category_status==true)
          {
              if(index==1 || index==2 || index==3 || index==4 || index==5)
              {
                   System.out.println("inside index 1 machine ");
                    try
                    {
            
                      if(!machine_cost.getText().isEmpty())
                      {
                        machine_cost_val=Integer.parseInt(machine_cost.getText());
                        System.out.println("machine_cost_val = " + machine_cost_val);
                
                        double d=((double)10/100);
                        installation_cost_val=d*machine_cost_val;
                        DecimalFormat df=new DecimalFormat("#");
                        df.setMaximumFractionDigits(1);
                        System.out.println("installation_cost_val = " + df.format(installation_cost_val));
                        installation_cost.setText(df.format(installation_cost_val)+"");
                        disposal_val=(int)installation_cost_val;
                        disposal.setText(df.format(installation_cost_val)+"");
                
                        total_machine_cost_val=(int)(machine_cost_val+installation_cost_val+other_cost);
                         total_machine_cost.setText(total_machine_cost_val+"");
                
                        machine_cost_considered = (total_machine_cost_val)-(disposal_val);
                        machine_considered.setText(machine_cost_considered+"");
                
                        double temp_maintanance_val=0.04*total_machine_cost_val;
                        double temp_consumables_val=0.01*total_machine_cost_val;
                        maintanance_val=(int)temp_maintanance_val;
                        consumables_val=(int)temp_consumables_val;
                
                        maintanance.setText(maintanance_val+"");
                        consumables.setText( consumables_val+"");
                
                
                
                        double temp_interest=temp_roi*temp_loan*total_machine_cost_val;
                        interest_val=(int) temp_interest;
                        interest.setText(interest_val+"");
                      }
                      else
                      {
                         installation_cost.setText(0+"");
                         total_machine_cost.setText(0+"");
                         disposal.setText(0+"");
                         maintanance.setText(0+"");
                         consumables.setText( 0+"");
                         interest.setText(0+"");
                         machine_considered.setText(0+"");
                      }
            
                   }
                  catch(Exception e)
                  {
                         JOptionPane.showMessageDialog(this,"Enter a digit");
                  }
      
              }
             /*else if(index==3 || index==4 || index==5)

              {
                 System.out.println("inside 3 machine = " );
                 try{
            
                        if(!removeComma(machine_cost.getText()).isEmpty())
                        {
                            machine_cost_val=Integer.parseInt(machine_cost.getText());
                            System.out.println("machine_cost_val = " + machine_cost_val);
                        }
                        else
                        {
                                         // JOptionPane.showMessageDialog(this,"");

                        }
                      }
                    catch (Exception e)
                    {
                          JOptionPane.showMessageDialog(this,"Enter a digit");

                      }
                }*/
        
          
           }
           else
            {
                JOptionPane.showMessageDialog(this,"Select a category and continue.!");

            }
      }
      else
      {
          JOptionPane.showMessageDialog(this, "Please enter Machine details and continue!");
      }
    }//GEN-LAST:event_machine_costKeyReleased

    private void installation_costKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_installation_costKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_installation_costKeyReleased

    private void machine_consideredKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_machine_consideredKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_machine_consideredKeyReleased

    private void machine_lifeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_machine_lifeKeyReleased
        // TODO add your handling code here:
        
        try{
            if( !machine_life.getText().isEmpty())
            {
                    machine_life_val=Integer.parseInt( machine_life.getText());
                    if(index==1 || index==2 || index==3 || index==4 || index==5)
                    {
                    machine_cost_year_val = machine_cost_considered/machine_life_val;
                    machine_cost_year.setText( machine_cost_year_val+"");
                    }
            }
            else
            {
                                    machine_cost_year.setText(0+"");

                
            }

            
        }
        catch(Exception e)
            
        {
                        JOptionPane.showMessageDialog(this,"Enter a digit");

        }
        
        
    }//GEN-LAST:event_machine_lifeKeyReleased

    private void kwhKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kwhKeyReleased
        // TODO add your handling code here:
        try{
            if(!kwh.getText().isEmpty())
            {
                    kwh_val=Integer.parseInt(kwh.getText());
                    
            }
            else
            {
                consume.setText(0+"");
            }

        }
        catch(Exception e)
        {
                                    JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_kwhKeyReleased

    private void eb_percentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eb_percentKeyReleased
        // TODO add your handling code here:
        try
        {
            
        
        if(!eb_percent.getText().isEmpty())
        {
            
           int temp_eb_percent_val=Integer.parseInt( eb_percent.getText());
           temp_dg_percent_val=100-temp_eb_percent_val;
           dg_percent.setText(temp_dg_percent_val+"");
           
           double d=((double)temp_eb_percent_val/100);
           eb_percent_val=d;
           double d1=((double)temp_dg_percent_val/100);
           dg_percent_val=d1;
            System.out.println("eb_percent_val = " + eb_percent_val);
                        System.out.println("db_percent_val = " + dg_percent_val);

        }
        else
        {
           eb_val=0;
           dg_val=0;
                           consume.setText(0+"");

        }
        }
        catch(Exception e)
        {
                                                JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_eb_percentKeyReleased

    private void dg_percentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dg_percentKeyReleased
        // TODO add your handling code here:
      /*  try
        {
            
        
        if(!dg_percent.getText().isEmpty())
        {
            
           double d=((double)temp_dg_percent_val/100);
           dg_percent_val=d;
           
           
           
        }
        else
        {
            dg_val=0;
        }
        }
        catch(Exception e)
        {
                                                JOptionPane.showMessageDialog(this,"Enter a digit");

        }*/
    }//GEN-LAST:event_dg_percentKeyReleased

    private void eb_rateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eb_rateKeyReleased
        // TODO add your handling code here:
        try
        {
            
        
        if(!eb_rate.getText().isEmpty())
        {
            
           eb_rate_val=Double.parseDouble( eb_rate.getText());
           eb_val=eb_rate_val*eb_percent_val;
            System.out.println("eb_val"+eb_val);
            System.out.println("dg_val"+dg_val);
            
             consumption_val=kwh_val*(dg_val+eb_val);
            System.out.println("consumption_val = " + consumption_val);
            consume.setText((int)(consumption_val+0.5)+"");
            if(index==1 || index==2)
            {
            
            power_charges_year_val=((int)(consumption_val+0.5))*machine_uptime_val;
             power_charges_year.setText(power_charges_year_val+"");
            }


        }
        else
        {
                             eb_val=0;
                             power_charges_year.setText(0+"");

        }
        }
        catch(Exception e)
        {
                                                JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_eb_rateKeyReleased

    private void dg_rateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dg_rateKeyReleased
        // TODO add your handling code here:
         try
        {
            
        
        if(!dg_rate.getText().isEmpty())
        {
            
           dg_rate_val=Double.parseDouble( dg_rate.getText());
           dg_val=dg_rate_val*dg_percent_val;
            System.out.println("dg_val"+dg_val);
            
            
            //POWER CALC
           consumption_val=kwh_val*(dg_val+eb_val);
            System.out.println("consumption_val = " + consumption_val);
            System.out.println("dg_val = " + dg_val);
            System.out.println("eb_val = " + eb_val);
            System.out.println("machine_uptime_val = " + machine_uptime_val);
            consume.setText((int)(consumption_val+0.5)+"");
            consumption_val=(int)(consumption_val+0.5);
            System.out.println(" consumption_val = " +  consumption_val);
            
            power_charges_year_val=(int)(consumption_val*machine_uptime_val);
             power_charges_year.setText(power_charges_year_val+"");

        }
        else
        {
            dg_val=0;
                         power_charges_year.setText(0+"");

        }
        }
        catch(Exception e)
        {
                                                JOptionPane.showMessageDialog(this,"Enter a digit");

        }
       
    }//GEN-LAST:event_dg_rateKeyReleased

    private void consumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_consumeActionPerformed

    private void lenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lenKeyReleased
        // TODO add your handling code here:
        try
        {
            if(!len.getText().isEmpty())
            {
                len_val=Integer.parseInt(len.getText());
                area_val=len_val*width_val;
                area.setText(area_val+""); 
                
                space_cost_year_val=(int)((sqm_val*area_val*12)+0.5);
                space_cost_year.setText(space_cost_year_val+"");

           }
            else
            {
               area.setText(0+""); 
               space_cost_year.setText(0+"");

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_lenKeyReleased

    private void widthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_widthKeyReleased
        // TODO add your handling code here:
        try{
            
        if(!width.getText().isEmpty())
        {
           width_val=Integer.parseInt(width.getText());
           area_val=len_val*width_val;
           area.setText(area_val+""); 
           
           
           space_cost_year_val=(int)((sqm_val*area_val*12)+0.5);
           space_cost_year.setText(space_cost_year_val+"");
           
           
           //MHR FINAL CALCULATION
           fix_val=machine_cost_year_val+interest_val+space_cost_year_val+maintanance_val;
           fix_val/=work_hour_year_val;
           
           fix.setText(fix_val+"");
           
           if(index==1 || index==3)
           {
             var_val=power_charges_year_val+consumables_val;
             var_val/=machine_uptime_val;
           
             var.setText(var_val+"");
               
               
           }
           else if(index==2 || index==4 || index==5)
           {
             var_val=power_charges_year_val+consumables_val+cost_year_val;
             var_val/=machine_uptime_val;
           
             var.setText(var_val+"");
           }
           
           mhr_val=var_val+fix_val;
           
           mhr.setText(mhr_val+"");
           DecimalFormat df=new DecimalFormat("#");
           df.setMaximumFractionDigits(2);
           
           mmr_val=mhr_val/60;
           
           mmr.setText(df.format(mmr_val)+"");
                      mmr_val=Double.parseDouble(df.format(mmr_val));

           
                   add.setEnabled(true);
                  // report.setEnabled(true);
                 //  JOptionPane.showMessageDialog(this,"Click on ADD button!");
                  
                   

           }


        
        else
        {
                           area.setText(0+"");
                           space_cost_year.setText(0+"");


        }
     }
        
            catch(Exception e)
        {
                                                            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_widthKeyReleased

    private void categoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categoryItemStateChanged
        // TODO add your handling code here:
       index=category.getSelectedIndex();
       category_status=true;
        System.out.println("index = " + index);
        if(index == 0)
        {
            JOptionPane.showMessageDialog(this,"Enter a valid Option!");
        }
        else if(index == 1)
        {
            System.out.println("In standard " );
            flush();
            updateStatus();
            setDefaultInitialization();
            
            
            operators.setText("");
            salary_month_1.setText("");
            utilisation_1.setText("");
            supervisor.setText("");
            salary_month_2.setText("");
            utilisation_2.setText("");

            others.setEnabled(false);
            other_qty.setEnabled(false);
            others_cost.setEnabled(false);
            air.setEnabled(false);
            air_qty.setEnabled(false);
            air_cost.setEnabled(false);
            
            installation_percentage.setEnabled(false);
            disposal_percentage.setEnabled(false);
            maintanence_percentage.setEnabled(false);
            consumable_percentage.setEnabled(false);
        
        
             set_default();
             set_not_editable_work();
        
        }
        else if(index==2)
        {
            System.out.println("In standard +labour");
            flush();
                        updateStatus();
                        setDefaultInitialization();


            
            
            
            
            
            set_not_editable_work();
            others.setEnabled(false);
            other_qty.setEnabled(false);
            others_cost.setEnabled(false);
            air.setEnabled(false);
            air_qty.setEnabled(false);
            air_cost.setEnabled(false);
             installation_percentage.setEnabled(false);
            disposal_percentage.setEnabled(false);
            maintanence_percentage.setEnabled(false);
            consumable_percentage.setEnabled(false);
            
            operators.setEditable(true);
            salary_month_1.setEditable(true);
            utilisation_1.setEditable(true);
            supervisor.setEditable(true);
            salary_month_2.setEditable(true);
            utilisation_2.setEditable(true);
 
        
            
            set_default();
        
            set_default_labour();

        
            System.out.println("this = " + (int)work_hour_year_val);
            System.out.println("this = " + work_hour_year_val);
            System.out.println("this = " + temp_machine_uptime_val);
        
            
        }
        else if(index==3)
        {
            System.out.println("customize " );
            flush();
                        updateStatus();
                        setDefaultInitialization();


            set_default();
            set_editable_work();
            cost_year.setText("");
            operators.setText("");
            salary_month_1.setText("");
            utilisation_1.setText("");
            supervisor.setText("");
            salary_month_2.setText("");
            utilisation_2.setText("");
            
             others.setEnabled(true);
            other_qty.setEnabled(true);
            others_cost.setEnabled(true);
            air.setEnabled(false);
            air_qty.setEnabled(false);
            air_cost.setEnabled(false);
            
          installation_percentage.setEnabled(true);
            disposal_percentage.setEnabled(true);
            maintanence_percentage.setEnabled(true);
            consumable_percentage.setEnabled(true);
        
            
            
            
             operators.setEnabled(false);
            salary_month_1.setEnabled(false);
            utilisation_1.setEnabled(false);
            supervisor.setEnabled(false);
            salary_month_2.setEnabled(false);
            utilisation_2.setEnabled(false);
            cost_year.setEnabled(false);
        
            
        }
         else if(index==4)
         {
            System.out.println("customze+labour");
            flush();
                        updateStatus();
                        setDefaultInitialization();

            
            set_default();
            set_default_labour();
            set_editable_work();
            
             others.setEnabled(true);
            other_qty.setEnabled(true);
            others_cost.setEnabled(true);
            air.setEnabled(false);
            air_qty.setEnabled(false);
            air_cost.setEnabled(false);
                     
            
            operators.setEnabled(true);
            salary_month_1.setEnabled(true);
            utilisation_1.setEnabled(true);
            supervisor.setEnabled(true);
            salary_month_2.setEnabled(true);
            utilisation_2.setEnabled(true);
            
            installation_percentage.setEnabled(true);
            disposal_percentage.setEnabled(true);
            maintanence_percentage.setEnabled(true);
            consumable_percentage.setEnabled(true);
        
            
           
             
             
             
            operators.setEditable(true);
            salary_month_1.setEditable(true);
            utilisation_1.setEditable(true);
            supervisor.setEditable(true);
            salary_month_2.setEditable(true);
            utilisation_2.setEditable(true);
            
            operators.setEnabled(true);
            salary_month_1.setEnabled(true);
            utilisation_1.setEnabled(true);
            supervisor.setEnabled(true);
            salary_month_2.setEnabled(true);
            utilisation_2.setEnabled(true);
        
             
         }
         else if(index==5)
         {
             System.out.println("for assembly");
             
             flush();
             set_default();
             set_default_labour();
                         updateStatus();
                         setDefaultInitialization();


             others.setEnabled(true);
            other_qty.setEnabled(true);
            others_cost.setEnabled(true);
            air.setEnabled(true);
            air_qty.setEnabled(true);
            air_cost.setEnabled(true);
            
            installation_percentage.setEnabled(true);
            disposal_percentage.setEnabled(true);
            maintanence_percentage.setEnabled(true);
            consumable_percentage.setEnabled(true);
            
            operators.setEnabled(true);
            salary_month_1.setEnabled(true);
            utilisation_1.setEnabled(true);
            supervisor.setEnabled(true);
            salary_month_2.setEnabled(true);
            utilisation_2.setEnabled(true);
            
           
             
             
             
            operators.setEditable(true);
            salary_month_1.setEditable(true);
            utilisation_1.setEditable(true);
            supervisor.setEditable(true);
            salary_month_2.setEditable(true);
            utilisation_2.setEditable(true);
            
        
             
         }
    }//GEN-LAST:event_categoryItemStateChanged

    private void week_holsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_week_holsKeyReleased
        // TODO add your handling code here:
        try
        {
            if( !week_hols.getText().isEmpty())
            {
            
      
              if(index==3 || index==4 || index==5)
        
               {
                   national_hols.setText(0+"");
                   week_hols_val=Integer.parseInt(week_hols.getText());
                   
                   work_days_year_val=365-(week_hols_val+national_hols_val);
                   work_days_year.setText( work_days_year_val+"");
                   work_hour_year_val=no_of_shifts_val*work_days_year_val*7.5;
                 
                 work_hour_year.setText( work_hour_year_val+"");
                 temp_machine_uptime_val=temp_capacity_eff_val*work_hour_year_val;
                 machine_uptime_val=(int)(temp_machine_uptime_val+0.5);
                 
                 machine_uptime.setText( machine_uptime_val+"");
                 
                   
                }
            }
        else
        {
                              //work_days_year.setText(0+""); 
         

        }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
        
    }//GEN-LAST:event_week_holsKeyReleased

    private void installation_percentageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_installation_percentageKeyReleased
        // TODO add your handling code here:
        System.out.println("inside install");
        System.out.println("index = " + index);
        if(index==3 || index==4 || index==5)
        {
            System.out.println("try");
        try
        {
            
        if(!installation_percentage.getText().isEmpty())
        {
        
        
            int i_p=Integer.parseInt(installation_percentage.getText());
            double d=((double)i_p/100);
            System.out.println("d = " + d);
            installation_cost_val=d*machine_cost_val;
            DecimalFormat df=new DecimalFormat("#");
            df.setMaximumFractionDigits(0);
            
            installation_cost.setText(df.format(installation_cost_val)+"");
            
            
             total_machine_cost_val=(int)(machine_cost_val+installation_cost_val+other_cost);
             total_machine_cost.setText(total_machine_cost_val+"");
        
        }
        else
        {
                        installation_cost.setText(0+"");
                        total_machine_cost_val=(int)(machine_cost_val+other_cost);
                        total_machine_cost.setText(total_machine_cost_val+"");

        }
            
        }
        
        catch(Exception e)
        {
                                                            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
        }
    }//GEN-LAST:event_installation_percentageKeyReleased

    private void disposalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_disposalKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_disposalKeyReleased

    private void disposal_percentageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_disposal_percentageKeyReleased
        // TODO add your handling code here:
        if(index==3 || index==4 || index==5)
        {    
            try
            {
               if(!disposal_percentage.getText().isEmpty())
               {
               
               
                     int d_p=Integer.parseInt(disposal_percentage.getText());
                     double d=((double)d_p/100);
                     System.out.println("d = " + d);
                     disposal_val=(int)(d*machine_cost_val);
                     //DecimalFormat df=new DecimalFormat("#");
                     //df.setMaximumFractionDigits(0);
            
                    disposal.setText(disposal_val+"");
                    
                    machine_cost_considered = (int)((total_machine_cost_val)-(disposal_val));
                    machine_considered.setText(machine_cost_considered+"");
                    
                    System.out.println("inside disposal");
                    
                    machine_cost_year_val = machine_cost_considered/machine_life_val;
                    machine_cost_year.setText( machine_cost_year_val+"");
                
               }
                else
                {
                            disposal.setText(0+"");
                            machine_considered.setText(0+"");
                            machine_cost_year.setText( 0+"");


                            

                }
            }
            catch(Exception e)
            {
                                                            JOptionPane.showMessageDialog(this,"Enter a digit");

           }
        
        }
        
    }//GEN-LAST:event_disposal_percentageKeyReleased

    private void consumable_percentageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consumable_percentageKeyReleased
        // TODO add your handling code here:
        if(index==3 || index==4 ||  index==5)
        {    
            try
            {
               if(!consumable_percentage.getText().isEmpty())
               {
               
               
                     int m_p=Integer.parseInt(consumable_percentage.getText());
                     double d=((double)m_p/100);
                     System.out.println("d = " + d);
                     double m_cost=d*total_machine_cost_val;
                     DecimalFormat df=new DecimalFormat("#");
                     df.setMaximumFractionDigits(0);
            
                   consumables.setText(df.format(m_cost)+"");
                
               }
                else
                {
                            consumables.setText(0+"");

                }
            }
            catch(Exception e)
            {
                                                            JOptionPane.showMessageDialog(this,"Enter a digit");

           }
        
        }
    }//GEN-LAST:event_consumable_percentageKeyReleased

    private void roiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roiKeyReleased
        // TODO add your handling code here:
        if(index==3 || index==4 || index==5)
        {    
            try
            {
               if(!roi.getText().isEmpty())
               {
               
               
                     double m_p = Double.parseDouble(roi.getText());
                     
                     temp_roi=((double)m_p/100);
                     System.out.println("d = " + temp_roi);
                     
                     double temp_interest=temp_roi*temp_loan*total_machine_cost_val;
                    interest_val=(int) temp_interest;
                    interest.setText(interest_val+"");
                     
            
                   
                
               }
                else
                {
                                                interest.setText(0+"");


                }
            }
            catch(Exception e)
            {
                                                            JOptionPane.showMessageDialog(this,"Enter a digit");

           }
        
        }
    }//GEN-LAST:event_roiKeyReleased

    private void loanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loanKeyReleased
        // TODO add your handling code here:
        if(index==3 || index==4 || index==5)
        {    
            try
            {
               if(!loan.getText().isEmpty())
               {
               
               
                     double m_p = Double.parseDouble(loan.getText());
                     
                     double temp_loan=((double)m_p/100);
                     System.out.println("d = " + temp_loan);
                     
                     double temp_interest=temp_roi*temp_loan*total_machine_cost_val;
                    interest_val=(int) temp_interest;
                    interest.setText(interest_val+"");
                     
            
                   
                
               }
                else
                {
                                                interest.setText(0+"");


                }
            }
            catch(Exception e)
            {
                                                            JOptionPane.showMessageDialog(this,"Enter a digit");

           }
        
        }
    }//GEN-LAST:event_loanKeyReleased

    private void maintanence_percentageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_maintanence_percentageKeyReleased
        // TODO add your handling code here:
          if(index==3 || index==4 || index==5)
        {    
            try
            {
               if(!maintanence_percentage.getText().isEmpty())
               {
               
               
                     int m_p=Integer.parseInt(maintanence_percentage.getText());
                     double d=((double)m_p/100);
                     System.out.println("d = " + d);
                     maintanance_val=(int)(d*total_machine_cost_val);
                     //DecimalFormat df=new DecimalFormat("#");
                     //df.setMaximumFractionDigits(0);
            
                   maintanance.setText( maintanance_val+"");
                
               }
                else
                {
                            maintanance.setText(0+"");

                }
            }
            catch(Exception e)
            {
                                                            JOptionPane.showMessageDialog(this,"Enter a digit");

           }
        
        }
      
    }//GEN-LAST:event_maintanence_percentageKeyReleased

    private void national_holsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_national_holsKeyReleased
        // TODO add your handling code here:
        try
        {
            if( !national_hols.getText().isEmpty())
            {
                national_hols_val=Integer.parseInt(national_hols.getText());
                work_days_year_val=365-(week_hols_val+national_hols_val);
                work_days_year.setText( work_days_year_val+"");
                work_hour_year_val=no_of_shifts_val*work_days_year_val*7.5;
                 
                 work_hour_year.setText( work_hour_year_val+"");
                 temp_machine_uptime_val=temp_capacity_eff_val*work_hour_year_val;
                 machine_uptime_val=(int)(temp_machine_uptime_val+0.5);
                 
                 machine_uptime.setText( machine_uptime_val+"");
                 

                 
                 
                
            }
            else
            {
                work_days_year_val=365-week_hols_val;

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_national_holsKeyReleased

    private void no_of_shiftsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_no_of_shiftsKeyReleased
        // TODO add your handling code here:
        
        try
        {
            if( ! no_of_shifts.getText().isEmpty())
            {
                 no_of_shifts_val=Integer.parseInt( no_of_shifts.getText());
                 
                 work_hour_year_val=no_of_shifts_val*work_days_year_val*7.5;
                 
                 work_hour_year.setText( work_hour_year_val+"");
                 System.out.println("temp_capacity_eff_val = " + temp_capacity_eff_val);
                 System.out.println("work_hour_year_val = " +work_hour_year_val );
                 temp_machine_uptime_val=temp_capacity_eff_val*work_hour_year_val;
                 machine_uptime_val=(int)(temp_machine_uptime_val+0.5);
                 
                 machine_uptime.setText( machine_uptime_val+"");
                 

                 
                 
                
                
            }
            else
            {
                work_hour_year.setText( 0+"");
                 machine_uptime.setText( 0+"");

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
        
    }//GEN-LAST:event_no_of_shiftsKeyReleased

    private void capacity_effKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_capacity_effKeyReleased
        // TODO add your handling code here:
         try
        {
            if( !capacity_eff .getText().isEmpty())
            {
                
                 
                 double d=Double.parseDouble(capacity_eff .getText());
                 temp_capacity_eff_val=((double)d/100);
                 
                 temp_machine_uptime_val=temp_capacity_eff_val*work_hour_year_val;
                 machine_uptime_val=(int)(temp_machine_uptime_val+0.5);
                 
                 machine_uptime.setText( machine_uptime_val+"");
                 
                 
                
                
            }
            else
            {
                 machine_uptime.setText( 0+"");

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_capacity_effKeyReleased

    private void operatorsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_operatorsKeyReleased
        // TODO add your handling code here:
        
                 try
        {
            if( !operators .getText().isEmpty())
            { 
                 operators_val=Integer.parseInt(operators .getText());
                 cost_year_val=(int)(((salary_month_2_val*utilisation_2_val*supervisor_val)+(salary_month_1_val*operators_val*utilisation_1_val))*12);
                 cost_year.setText(cost_year_val+"");
               
             
            }
            else
            {
                               cost_year.setText(cost_year_val+"");


            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_operatorsKeyReleased

    private void salary_month_1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salary_month_1KeyReleased
        // TODO add your handling code here:
        
        
                 try
        {
            if( !salary_month_1 .getText().isEmpty())
            {                
                 
                 salary_month_1_val=Integer.parseInt(salary_month_1 .getText());
                 cost_year_val=(int)(((salary_month_2_val*utilisation_2_val*supervisor_val)+(salary_month_1_val*operators_val*utilisation_1_val))*12);
                 cost_year.setText(cost_year_val+"");
               
               
            }
            else
            {
                               cost_year.setText(cost_year_val+"");


            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_salary_month_1KeyReleased

    private void utilisation_1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_utilisation_1KeyReleased
        // TODO add your handling code here:
                try
        {
            if( !utilisation_1.getText().isEmpty())
            {                
                 
                 double d=Double.parseDouble(utilisation_1 .getText());
                 utilisation_1_val=((double)d/100);
                 cost_year_val=(int)(((salary_month_2_val*utilisation_2_val*supervisor_val)+(salary_month_1_val*operators_val*utilisation_1_val))*12);
                 cost_year.setText(cost_year_val+"");
               
            }
            else
            {
                               cost_year.setText(0+"");


            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_utilisation_1KeyReleased

    private void supervisorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supervisorKeyReleased
        // TODO add your handling code here:
                 try
        {
            if( !supervisor.getText().isEmpty())
            {                
                 
                 supervisor_val=Integer.parseInt(supervisor .getText());
                 cost_year_val=(int)(((salary_month_2_val*utilisation_2_val*supervisor_val)+(salary_month_1_val*operators_val*utilisation_1_val))*12);
                 cost_year.setText(cost_year_val+"");
               
               
            }
            else
            {
                cost_year_val=(int)((salary_month_1_val*operators_val*utilisation_1_val)*12);
                cost_year.setText(cost_year_val+"");

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_supervisorKeyReleased

    private void salary_month_2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salary_month_2KeyReleased
        // TODO add your handling code here:
        
                 try
        {
            if( !salary_month_2.getText().isEmpty())
            {                
                 
                 salary_month_2_val=Integer.parseInt(salary_month_2 .getText());
                 
                 cost_year_val=(int)(((salary_month_2_val*utilisation_2_val*supervisor_val)+(salary_month_1_val*operators_val*utilisation_1_val))*12);
                 cost_year.setText(cost_year_val+"");
               
               
            }
            else
            {
                cost_year_val=(int)((salary_month_1_val*operators_val*utilisation_1_val)*12);
                 cost_year.setText(cost_year_val+"");

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_salary_month_2KeyReleased

    private void utilisation_2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_utilisation_2KeyReleased
        // TODO add your handling code here:
                 try
        {
            if( !utilisation_2.getText().isEmpty())
            {                
                 
                 double d=Integer.parseInt(utilisation_2.getText());
                 utilisation_2_val=((double)d/100);
                 cost_year_val=(int)(((salary_month_2_val*utilisation_2_val*supervisor_val)+(salary_month_1_val*operators_val*utilisation_1_val))*12);
                 cost_year.setText(cost_year_val+"");
               
            }
            else
            {
                 cost_year_val=(int)((salary_month_1_val*operators_val*utilisation_1_val)*12);
                 cost_year.setText(cost_year_val+"");
               

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit");

        }
    }//GEN-LAST:event_utilisation_2KeyReleased

    private void sqmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sqmKeyReleased
        // TODO add your handling code here:
        
        if(index==3 || index==4 || index==5)
          {
              try{
                  if(!sqm.getText().isEmpty())
                  {
                      sqm_val=Double.parseDouble(sqm.getText());
                  }
                  else
                  {
                                 space_cost_year.setText(0+"");

                  }
              }
              catch(Exception e)
              {
                              JOptionPane.showMessageDialog(this,"Enter a digit");

              }
              
           space_cost_year_val=(int)((sqm_val*area_val*12)+0.5);
           space_cost_year.setText(space_cost_year_val+"");
           
           
           //MHR FINAL CALCULATION
           fix_val=machine_cost_year_val+interest_val+space_cost_year_val+maintanance_val;
           fix_val/=work_hour_year_val;
           
           fix.setText(fix_val+"");
           
           if(index==1 || index==3)
           {
             var_val=power_charges_year_val+consumables_val;
             var_val/=machine_uptime_val;
           
             var.setText(var_val+"");
               
               
           }
           else if(index==2 || index==4 || index==5)
           {
             var_val=power_charges_year_val+consumables_val+cost_year_val;
             var_val/=machine_uptime_val;
           
             var.setText(var_val+"");
           }
           
           mhr_val=var_val+fix_val;
           
           mhr.setText(mhr_val+"");
           DecimalFormat df=new DecimalFormat("#");
           df.setMaximumFractionDigits(2);
           
           mmr_val=mhr_val/60;
           
           mmr.setText(df.format(mmr_val)+"");
                      mmr_val=Double.parseDouble(df.format(mmr_val));

           
            //JOptionPane.showMessageDialog(this,"Click on ADD button!");                  
            add.setEnabled(true);
            //report.setEnabled(true);
            
            

           }

    }//GEN-LAST:event_sqmKeyReleased

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        System.out.println("file generate " );
        save=true;
         insert_into_file();
         
    }//GEN-LAST:event_addActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        // TODO add your handling code here:
        report_completed=true;
        generate_excel();
    }//GEN-LAST:event_reportActionPerformed

    private void machinenameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_machinenameKeyReleased
        // TODO add your handling code here:
        if(!machinename.getText().isEmpty())
        {
        machinename_val= machinename.getText();
        machinename_val=machinename_val.toUpperCase();
            System.out.println("machinename_val = " + machinename_val);
        name_status=true;
        }
        else
        {
           // machinename.setText(0+"");
        }
   
    }//GEN-LAST:event_machinenameKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(save==true && report_completed==true)
        {
           JOptionPane.showMessageDialog(this, "Saved ");
           this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        }
        else if(save==false)
        {
           int ret=JOptionPane.showConfirmDialog(this,"You want to close MHRCalc without saving?");
            System.out.println("ret = " + ret);
            if(ret==1)
            {
                 this.setVisible(true);
            }
            else if(ret==0)
            {
               this.dispose();
            }
                    
        }
        //JOptionPane.showMessageDialog(this, "Save and ");
    }//GEN-LAST:event_formWindowClosing

    private void typeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typeKeyReleased
        // TODO add your handling code here:
         
    }//GEN-LAST:event_typeKeyReleased

    private void specsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_specsKeyReleased
        // TODO add your handling code here:
        if(!specs.getText().isEmpty())
        {
        specs_val= specs.getText();
        specs_val=specs_val.toUpperCase();
            System.out.println("specs_val = " + specs_val);
        specs_status=true;
        }
        else
        {
            //specs.setText(0+"");
        }
   
    }//GEN-LAST:event_specsKeyReleased

    private void makeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_makeKeyReleased
        // TODO add your handling code here:
          if(!make.getText().isEmpty())
        {
        make_val= make.getText();
        make_val=make_val.toUpperCase();
            System.out.println("make_val = " + make_val);
        make_status=true;
        }
        else
        {
            //make.setText(0+"");
        }
    }//GEN-LAST:event_makeKeyReleased

    private void othersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_othersKeyReleased
        // TODO add your handling code here:
        try
        {
       if(! others.getText().isEmpty())
       {
           others_val=Integer.parseInt(others.getText());
           others_cost_val=others_val* others_qty_val;
                      others_cost.setText(others_cost_val+"");

       }
       else
       {
           others_cost.setText(0+"");
       }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit!");
        }
    }//GEN-LAST:event_othersKeyReleased

    private void other_qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_other_qtyKeyReleased
        // TODO add your handling code here:
        try
        {
         if(! other_qty.getText().isEmpty())
         {
           others_qty_val=Integer.parseInt(other_qty.getText());
           others_cost_val=others_val* others_qty_val;
           others_cost.setText(others_cost_val+"");
           
           
           if(index==3 || index==4)
           {
                power_charges_year_val=((int)(consumption_val+others_cost_val+0.5))*machine_uptime_val;
                power_charges_year.setText(power_charges_year_val+"");            
           }
           if(index==5)
           {
                power_charges_year_val=((int)(consumption_val+others_cost_val+air_cost_val+0.5))*machine_uptime_val;
                power_charges_year.setText(power_charges_year_val+"");            
           } 
         }
         else
         {
            others_cost.setText(0+"");
         }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit!");
        }
    }//GEN-LAST:event_other_qtyKeyReleased

    private void airKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_airKeyReleased
        // TODO add your handling code here:
        try
        {
       if(!air.getText().isEmpty())
       {
           air_val=Integer.parseInt(air.getText());
           air_cost_val=air_val* air_qty_val;
           air_cost.setText(air_cost_val+"");
           
           
           

       }
       else
       {
           air_cost.setText(0+"");
       }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit!");
        }
    }//GEN-LAST:event_airKeyReleased

    private void air_qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_air_qtyKeyReleased
        // TODO add your handling code here:
           try
        {
       if(!air_qty.getText().isEmpty())
       {
           air_qty_val=Integer.parseInt(air_qty.getText());
           air_cost_val=air_val* air_qty_val;
                      air_cost.setText(air_cost_val+"");
                      
                      
            if(index==5)
           {
                power_charges_year_val=((int)(consumption_val+others_cost_val+air_cost_val+0.5))*machine_uptime_val;
                power_charges_year.setText(power_charges_year_val+"");            
           }          

       }
       else
       {
           air_cost.setText(0+"");
       }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Enter a digit!");
        }
    }//GEN-LAST:event_air_qtyKeyReleased

    private void typeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeItemStateChanged
        // TODO add your handling code here:
        type_val=type.getSelectedIndex();
         System.out.println("type_val = " + type_val);
         type_status=true;
         if(type_val==0)
         {
             JOptionPane.showMessageDialog(this,"Enter a Valid Type!");
         }
         else if(type_val==1)
         {
             type_name="Automatic";
         }
         else if(type_val==2)
         {
                          type_name="Manual";

         }
         else if(type_val==3)
         {
                          type_name="Assembly";

         }
        
        
    }//GEN-LAST:event_typeItemStateChanged

    private void specific_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specific_reportActionPerformed
        // TODO add your handling code here:
        
        Mhrspecific specific=new Mhrspecific();
        specific.setVisible(true);
        
        
        
    }//GEN-LAST:event_specific_reportActionPerformed
     void flush()
     {
         machinename.setText("");
         
         make.setText("");
         specs.setText("");
             
         machine_cost.setText("");
         installation_cost.setText("");
          other .setText("");
         total_machine_cost.setText("");
         disposal.setText("");
         machine_considered.setText("");
         machine_cost_year.setText("");
         interest.setText("");
         maintanance.setText("");
         consumables.setText("");
         machine_life.setText("");
         kwh.setText("");
         eb_percent.setText("");
         eb_rate .setText("");
          dg_percent.setText("");
          dg_rate.setText("");
         consume .setText("");
          power_charges_year.setText("");
          len.setText("");
          width.setText("");
          area.setText("");
         sqm .setText("");
          space_cost_year.setText("");
          fix.setText("");
          
            var.setText("");
            mhr.setText("");
            mmr.setText("");
            others.setText("");
             other_qty.setText("");
                    others_cost.setText("");
                            air.setText("");
                            air_qty.setText("");
                                    air_cost.setText("");
                                    operators.setText("");
                                            salary_month_1.setText("");
                                            utilisation_1.setText("");
                                                    supervisor.setText("");
                                                    salary_month_2.setText("");
                                                            utilisation_2.setText("");
                                                            cost_year.setText("");
                                                            installation_percentage.setText("");
                                                             disposal_percentage.setText("");
                                                                    maintanence_percentage.setText("");
                                                                            consumable_percentage.setText("");
            installation_percentage.setText(10+"");
            disposal_percentage.setText(10+"");
            maintanence_percentage.setText(4+"");
            consumable_percentage.setText(1.0+"");                        
        

     }
     void set_default()
     {
            week_hols.setText(week_hols_val+"");
            national_hols.setText(national_hols_val+"");
            work_days_year.setText(work_days_year_val+"");
            no_of_shifts.setText(no_of_shifts_val+"");
            work_hour_year.setText(work_hour_year_val+"");
            capacity_eff.setText(capacity_eff_val+"");
            machine_uptime.setText(machine_uptime_val+"");
            roi.setText(roi_val+"");
            loan.setText(loan_val+"");
            sqm.setText(sqm_val+"");
            
            
            
            
            
     }
     void set_default_labour()
     {
         operators.setText(operators_val+"");
            salary_month_1.setText(salary_month_1_val+"");
            utilisation_1.setText(temp_utilisation_1_val+"");
            supervisor.setText(supervisor_val+"");
            salary_month_2.setText(salary_month_2_val+"");
            utilisation_2.setText(temp_utilisation_2_val+"");
        
            utilisation_1_val=((double)temp_utilisation_1_val/100);
            utilisation_2_val=((double)temp_utilisation_2_val/100);
        
            System.out.println("d = " + utilisation_1_val);
            System.out.println("d1 = " + utilisation_2_val);
            cost_year_val=(int)(((salary_month_2_val*utilisation_2_val*supervisor_val)+(salary_month_1_val*operators_val*utilisation_1_val))*12);
            cost_year.setText(cost_year_val+"");
        
     }
     void set_not_editable_work()
     {
        week_hols.setEnabled(false);
            national_hols.setEnabled(false);
            work_days_year.setEnabled(false);
            no_of_shifts.setEnabled(false);
            work_hour_year.setEnabled(false);
            capacity_eff.setEnabled(false);
            machine_uptime.setEnabled(false);
            roi.setEnabled(false);
            loan.setEnabled(false);
            sqm.setEnabled(false);
            
            if(index==1)
            {
            operators.setEnabled(false);
            salary_month_1.setEnabled(false);
            utilisation_1.setEnabled(false);
            supervisor.setEnabled(false);
            salary_month_2.setEnabled(false);
            utilisation_2.setEnabled(false);
            cost_year.setEnabled(false);
            }
            else if(index==2)
            {
                operators.setEnabled(true);
            salary_month_1.setEnabled(true);
            utilisation_1.setEnabled(true);
            supervisor.setEnabled(true);
            salary_month_2.setEnabled(true);
            utilisation_2.setEnabled(true);
            cost_year.setEnabled(true);
                
            }
             
     }
     void set_editable_work()
     {
            week_hols.setEnabled(true);
            national_hols.setEnabled(true);
            work_days_year.setEnabled(true);
            no_of_shifts.setEnabled(true);
            work_hour_year.setEnabled(true);
            capacity_eff.setEnabled(true);
            machine_uptime.setEnabled(true);
            roi.setEnabled(true);
            loan.setEnabled(true);
            sqm.setEnabled(true);
            
           
            
            
            
            week_hols.setEditable(true);
            national_hols.setEditable(true);
            work_days_year.setEditable(false);
            no_of_shifts.setEditable(true);
            work_hour_year.setEditable(false);
            capacity_eff.setEditable(true);
            machine_uptime.setEditable(false);
            roi.setEditable(true);
            loan.setEditable(true);
            sqm.setEditable(true);
            
     }
     
     void insert_into_file()
     {
         try
         {
             System.out.println("writing");
             System.out.println("type_name = " + type_name);
             
             
                     // TODO code application logic here
             String filewriter=machinename_val+","+type_name+","+specs_val+","+make_val+","+machine_cost_year_val+","+machine_uptime_val+","+maintanance_val+","+consumables_val+","+power_charges_year_val+",";
             filewriter+=space_cost_year_val+","+fix_val+","+var_val+","+mhr_val+","+mmr_val;
        try{
            dir+="\\Files";
            System.out.println("dir = " + dir);
            File directory = new File(dir);
            if(!directory.exists())
            {
                directory.mkdirs();
            }
            System.out.println("directory = " + directory);
            
                        FileWriter fw = new FileWriter(directory+"\\consolidate_result.txt",true);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            pw.println(filewriter);
            bw.close();
            JOptionPane.showMessageDialog(this, "Line Item Added!");
            add.setEnabled(false);
            report.setEnabled(true);
            JOptionPane.showMessageDialog(this,"Click on 'Report Generate' button!");

        }
        catch(Exception e){
            System.out.println("e = " + e);
        }
             
           
             System.out.println("writing done");
             
         }
         catch(Exception e)
         {
             
         }
     }
     
     void generate_excel()
     {
          
          File f=new File("result.xlsx");
          XSSFWorkbook workbook = new XSSFWorkbook(); 
          XSSFSheet spreadsheet = workbook.createSheet("Result");
          XSSFRow row=spreadsheet.createRow(1);
          XSSFCell cell;
          cell=row.createCell(1);
          cell.setCellValue("ID");
          cell=row.createCell(2);
          cell.setCellValue("MACHINE NAME");
          cell=row.createCell(3);
          cell.setCellValue("TYPE");
          cell=row.createCell(4);
          cell.setCellValue("SPECIFICATION");
          cell=row.createCell(5);
          cell.setCellValue("MAKE");
          cell=row.createCell(6);
          cell.setCellValue("MACHINE COST/YEAR");
          cell=row.createCell(7);
          cell.setCellValue("MACHINE UPTIME/YEAR");
          cell=row.createCell(8);
          cell.setCellValue("MAINTANANCE COST");
          cell=row.createCell(9);
          cell.setCellValue("CONSUMABLES COST");
          cell=row.createCell(10);
          cell.setCellValue("POWER CHARGES/YEAR");
          cell=row.createCell(11);
          cell.setCellValue("SPACE COST/YEAR");
          cell=row.createCell(12);
          cell.setCellValue("FIX");
          cell=row.createCell(13);
          cell.setCellValue("VAR");
          cell=row.createCell(14);
          cell.setCellValue("MHR");
          cell=row.createCell(15);
          cell.setCellValue("MMR");
          
          //read from file
          BufferedReader br=null;
          try
          {
              String sCurrentLine;
              
              br= new BufferedReader(new FileReader(dir+"\\consolidate_result.txt"));
              int j=2,row_len=2,id=1;

              while( br.ready() )
              {
                  row=spreadsheet.createRow(row_len);
                  cell=row.createCell(1);
                  cell.setCellValue(id);
                  id++;

                  String ar[]=br.readLine().split(",");
                  System.out.println("ar[0] = " + ar[0]);
                  System.out.println("ar[1] = " + ar[1]);
                  System.out.println("ar[2] = " + ar[2]);
                  System.out.println("ar[3] = " + ar[3]);

                 
                   for(int i=0;i<14;i++)
                   {
                     cell=row.createCell(j);
                     cell.setCellValue(ar[i]);
                     System.out.println("ar[i] = " + ar[i]);

                     j++;
                   }
                   row_len++;
                   j=2;
                  
                  
                 
              }
              FileOutputStream out = new FileOutputStream(f);
              workbook.write(out);
              out.close();
              JOptionPane.showMessageDialog(this, "Report Generated in 'result.xlsx'!");
              report.setEnabled(false);
          }
          catch(Exception e)
          {
              System.out.println("IO Exception = "+e);
          }
          finally
          {
              try
              {
                  if(br != null)
                       br.close();
                  
              }
              catch(Exception e)
              {
                  System.out.println("finally");
              }
          }
      
      
      
      
      
     }
     void updateStatus()
     {
         name_status=false ;
         type_status=false;
        make_status=false;
        specs_status=false;
                     

     }
     
     void setDefaultInitialization()
     {
           
    
    
    //INVESTMENT
     machine_cost_val=0;
     total_machine_cost_val=0;
     other_cost=0;
     machine_cost_considered=0;
     disposal_val=0;
     machine_life_val=0;
     machine_cost_year_val=0;
     installation_cost_val=0;
    
    //WORKING DAYS
     week_hols_val=54;
     national_hols_val=10;
     no_of_shifts_val=3;
     capacity_eff_val=85;
     work_days_year_val=365-(week_hols_val+national_hols_val);
    work_hour_year_val=no_of_shifts_val*work_days_year_val*7.5;
    temp_capacity_eff_val=0.85;
     temp_machine_uptime_val=temp_capacity_eff_val*work_hour_year_val;
    machine_uptime_val=(int)(temp_machine_uptime_val+0.5);
    
    
    //INTEREST CHARGES
     maintanance_val=0;
     consumables_val=0;
     roi_val=12;
     loan_val=100;
     interest_val=0;
    temp_roi=((double)roi_val/100);
    temp_loan=((double)loan_val/100);
    
    //POWER CHARGES
    kwh_val=0;
     eb_rate_val=0;dg_rate_val=0;eb_val=0;dg_val=0;temp_dg_percent_val=0;
   consumption_val=0;eb_percent_val=0;dg_percent_val=0;
    power_charges_year_val=0;others_cost_val=0;air_cost_val=0;
    others_val=0;air_val=0;others_qty_val=0;air_qty_val=0;
    
    //SPACECOST
    sqm_val=215.2;
    width_val=0;len_val=0;area_val=0;
     space_cost_year_val=0;
    
    //LABOUR COST
     operators_val=33;salary_month_1_val=15000;temp_utilisation_1_val=100;supervisor_val=3;salary_month_2_val=30000;temp_utilisation_2_val=10;cost_year_val=0;
     utilisation_2_val=0;utilisation_1_val=0;
    //MHRFINAL
     fix_val=0;var_val=0;
     mhr_val=0;mmr_val=0;

       
     }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MhrStandard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MhrStandard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MhrStandard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MhrStandard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
             //  mhr.setDefaultCloseOperation(mhr.EXIT_ON_CLOSE);
               
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Space_cost_year;
    private javax.swing.JButton add;
    private javax.swing.JTextField air;
    private javax.swing.JTextField air_cost;
    private javax.swing.JTextField air_qty;
    private javax.swing.JFormattedTextField area;
    private javax.swing.JFormattedTextField capacity_eff;
    private javax.swing.JComboBox category;
    private javax.swing.JFormattedTextField consumable_percentage;
    private javax.swing.JFormattedTextField consumables;
    private javax.swing.JFormattedTextField consume;
    private javax.swing.JFormattedTextField cost_year;
    private javax.swing.JFormattedTextField dg_percent;
    private javax.swing.JFormattedTextField dg_rate;
    private javax.swing.JFormattedTextField disposal;
    private javax.swing.JFormattedTextField disposal_percentage;
    private javax.swing.JFormattedTextField eb_percent;
    private javax.swing.JFormattedTextField eb_rate;
    private javax.swing.JFormattedTextField fix;
    private javax.swing.JFormattedTextField installation_cost;
    private javax.swing.JFormattedTextField installation_percentage;
    private javax.swing.JFormattedTextField interest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JFormattedTextField kwh;
    private javax.swing.JFormattedTextField len;
    private javax.swing.JFormattedTextField loan;
    private javax.swing.JFormattedTextField machine_considered;
    private javax.swing.JFormattedTextField machine_cost;
    private javax.swing.JFormattedTextField machine_cost_year;
    private javax.swing.JFormattedTextField machine_life;
    private javax.swing.JFormattedTextField machine_uptime;
    private javax.swing.JTextField machinename;
    private javax.swing.JFormattedTextField maintanance;
    private javax.swing.JFormattedTextField maintanence_percentage;
    private javax.swing.JTextField make;
    private javax.swing.JFormattedTextField mhr;
    private javax.swing.JFormattedTextField mmr;
    private javax.swing.JFormattedTextField national_hols;
    private javax.swing.JFormattedTextField no_of_shifts;
    private javax.swing.JFormattedTextField operators;
    private javax.swing.JFormattedTextField other;
    private javax.swing.JTextField other_qty;
    private javax.swing.JTextField others;
    private javax.swing.JTextField others_cost;
    private javax.swing.JFormattedTextField power_charges_year;
    private javax.swing.JButton report;
    private javax.swing.JFormattedTextField roi;
    private javax.swing.JFormattedTextField salary_month_1;
    private javax.swing.JFormattedTextField salary_month_2;
    private javax.swing.JFormattedTextField space_cost_year;
    private javax.swing.JButton specific_report;
    private javax.swing.JTextField specs;
    private javax.swing.JFormattedTextField sqm;
    private javax.swing.JFormattedTextField supervisor;
    private javax.swing.JFormattedTextField total_machine_cost;
    private javax.swing.JComboBox type;
    private javax.swing.JFormattedTextField utilisation_1;
    private javax.swing.JFormattedTextField utilisation_2;
    private javax.swing.JFormattedTextField var;
    private javax.swing.JFormattedTextField week_hols;
    private javax.swing.JFormattedTextField width;
    private javax.swing.JFormattedTextField work_days_year;
    private javax.swing.JFormattedTextField work_hour_year;
    // End of variables declaration//GEN-END:variables
}
