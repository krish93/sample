/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ldt;

import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Elcot
 */
public class LDTfront extends javax.swing.JFrame {

    /**
     * Creates new form LDTfront
     */
    public LDTfront() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Check Database");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Execute");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Status");

        jLabel2.setFont(new java.awt.Font("Trajan Pro", 0, 18)); // NOI18N
        jLabel2.setText("WIRING HARNESS");

        jButton3.setText("Report Generate");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trajan Pro", 0, 14)); // NOI18N
        jLabel3.setText("LDT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jButton3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel2)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(13, 13, 13)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addGap(35, 35, 35)
                .addComponent(jButton2)
                .addGap(52, 52, 52)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            Connection conn;
             Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
             conn=DriverManager.getConnection("jdbc:odbc:wiring");
            
            //Query Statement
            DatabaseMetaData md = conn.getMetaData();
            ResultSet rs = md.getTables(null, null, "ldt_bom", null);
            if (rs.next()) {
                

                JOptionPane.showMessageDialog(this,"Database Exists!!!");
                jButton2.setEnabled(true);
                jButton1.setEnabled(false);
                for(int i=1;i<=33;i++)
                {
                jProgressBar1.setValue(i);
                jProgressBar1.setStringPainted(true);
                
                }
            }
            else
            {

                JOptionPane.showMessageDialog(this,"Database doesn't Exists!!!");
                System.out.println("not exist");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Executing");
        try{
             new LDT();
             jButton2.setEnabled(false);
             jButton3.setEnabled(true);
             jProgressBar1.setValue(66);
             jProgressBar1.setStringPainted(true);
             
             JOptionPane.showMessageDialog(this, "Executed Successfully!");

             
            
        }
        catch(Exception e)
        {
            System.out.println("execute = " + e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
          try
        {
            String file=JOptionPane.showInputDialog("Enter your file name");
             report(file);
        }
        catch(Exception e)
        {
            System.out.println("e = " + e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    
     public void report(String file)
    {
        File f=new File(file+".xlsx");
        if(f.exists())
        {
            
            int ret=JOptionPane.showConfirmDialog(this,"File Already Exist. Want to Override ??");
            System.out.println("ret = " + ret);
            if(ret==1)
            {
                file=JOptionPane.showInputDialog("Enter the Another Excel File Name To Continue:");
                report(file);
            }
            else
            {
            generate(file);
            }
        }
        else
        {
           generate(file);
        }
    } 
void generate(String file)
{
    System.out.println("file = " + file);
   /* final_addition=jComboBox1.getSelectedItem().toString();
    final_addition=final_addition.toLowerCase();
    int addition_time=0;*/
    if(isNull(file))
    {
    
    }
    else if(!file.isEmpty())
        {
           try
        {
        Connection conn;
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
             conn=DriverManager.getConnection("jdbc:odbc:wiring");
             
        Statement statement = conn.createStatement();
        /*ResultSet time=statement.executeQuery("select cycle_time from cycle_data where operation_name='"+final_addition+"'");
        while(time.next())
        {
            double addition=Double.parseDouble(time.getString("cycle_time"));
            addition_time=(int)addition;
        }*/
      ResultSet resultSet = statement.executeQuery("select * from total_ldt_cycle_time");
      XSSFWorkbook workbook = new XSSFWorkbook(); 
      XSSFSheet spreadsheet = workbook.createSheet("total cycle time");
      XSSFRow row=spreadsheet.createRow(1);
      XSSFCell cell;
      cell=row.createCell(1);
      cell.setCellValue("ID");
      cell=row.createCell(2);
      cell.setCellValue("OPERATION NAME");
      cell=row.createCell(3);
      cell.setCellValue("CYCLE TIME");
      cell=row.createCell(4);
      cell.setCellValue("QUANTITY");
      cell=row.createCell(5);
      cell.setCellValue("TOTAL CYCLE TIME");
      int i=2,j=1;
      double cycle_time=0;
      while(resultSet.next())
      {
          System.out.println("i = " + i);
         row=spreadsheet.createRow(i);
         cell=row.createCell(1);
         cell.setCellValue(j);
         cell=row.createCell(2);
         cell.setCellValue(resultSet.getString("operation"));
         cell=row.createCell(3);
         cell.setCellValue(resultSet.getDouble("cycle_time"));

         cell=row.createCell(4);
         cell.setCellValue(resultSet.getDouble("quantity"));
       
         
         cell=row.createCell(5);
         double temp_cycle_time=resultSet.getDouble("total_cycle_time");
         cycle_time+=temp_cycle_time;

         cell.setCellValue(temp_cycle_time);
         j++; 
         i++;
      }
      row=spreadsheet.createRow(i);
      cell=row.createCell(2);
      cell.setCellValue("Total(Seconds)");
      
      cell=row.createCell(3);
      cell.setCellValue("");
      
      cell=row.createCell(4);
      cell.setCellValue("");
      cell=row.createCell(5);
      cell.setCellValue(cycle_time);
      
     /* row=spreadsheet.createRow(i+1);
      
      cell=row.createCell(2);
      cell.setCellValue("Total(Minutes)");
      
      cell=row.createCell(3);
      cell.setCellValue("");
      
      cell=row.createCell(4);
      cell.setCellValue("");
      cell=row.createCell(5);
      
      cycle_time=cycle_time/60;
      int minutes=(int)Math.round(cycle_time);
      cell.setCellValue((minutes));
     /* minutes+=addition_time;
      
      row=spreadsheet.createRow(i+2);
      
      cell=row.createCell(2);
      cell.setCellValue(final_addition);
      
      cell=row.createCell(3);
      cell.setCellValue("");
      
      cell=row.createCell(4);
      cell.setCellValue("");
      cell=row.createCell(5);
      cell.setCellValue(addition_time);
      
      row=spreadsheet.createRow(i+3);
      
      cell=row.createCell(2);
      cell.setCellValue("Total Minutes + "+final_addition);
      
      cell=row.createCell(3);
      cell.setCellValue("");
      
      cell=row.createCell(4);
      cell.setCellValue("");
      cell=row.createCell(5);
      cell.setCellValue(minutes);*/
      FileOutputStream out = new FileOutputStream(
      new File(file+".xlsx"));
      workbook.write(out);
      out.close();
      
      
      JOptionPane.showMessageDialog(this,"Report Generted");
      jProgressBar1.setValue(100);
      jProgressBar1.setStringPainted(true);
      this.dispose();
    }
        catch(Exception e)
    {
        System.out.println("e = " + e);
        JOptionPane.showMessageDialog(this, e);
    }
    }
    else
        {
            file=JOptionPane.showInputDialog("Enter the Excel File Name To Continue:");
            report(file);
        }
    }
boolean isNull(String file)
{
    if(file==null)
    {
        return true;
    }
    return false;
}
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LDTfront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LDTfront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LDTfront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LDTfront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */ java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LDTfront().setVisible(true);
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
